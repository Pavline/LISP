
CL-USER 1 > (fun 3)

Error: Undefined operator FUN in form (FUN 3).
  1 (continue) Try invoking FUN again.
  2 Return some values from the form (FUN 3).
  3 Try invoking something other than FUN with the same arguments.
  4 Set the symbol-function of FUN to another function.
  5 Set the macro-function of FUN to another function.
  6 (abort) Return to level 0.
  7 Return to top loop level 0.

Type :b for backtrace or :c <option number> to proceed.
Type :bug-form "<subject>" for a bug report template or :? for other options.

CL-USER 2 : 1 > (fun 3)

Error: The variable NILL is unbound.
  1 (continue) Try evaluating NILL again.
  2 Specify a value to use this time instead of evaluating NILL.
  3 Specify a value to set NILL to.
  4 (abort) Return to level 1.
  5 Return to debug level 1.
  6 Return to level 0.
  7 Return to top loop level 0.

Type :b for backtrace or :c <option number> to proceed.
Type :bug-form "<subject>" for a bug report template or :? for other options.

CL-USER 3 : 2 > (fun (6))

Error: Illegal argument in functor position: 6 in (6).
  1 (continue) Evaluate 6 and ignore the rest.
  2 (abort) Return to level 2.
  3 Return to debug level 2.
  4 Return to level 1.
  5 Return to debug level 1.
  6 Return to level 0.
  7 Return to top loop level 0.

Type :b for backtrace or :c <option number> to proceed.
Type :bug-form "<subject>" for a bug report template or :? for other options.

CL-USER 4 : 3 > (FUN 5)
(5 4 3 2 1)

CL-USER 5 : 3 > ( fun 4)

Error: Undefined operator APP1 in form (APP1 (FUN (- N 1) N)).
   1 (continue) Try invoking APP1 again.
   2 Return some values from the form (APP1 (FUN (- N 1) N)).
   3 Try invoking something other than APP1 with the same arguments.
   4 Set the symbol-function of APP1 to another function.
   5 Set the macro-function of APP1 to another function.
   6 (abort) Return to level 3.
   7 Return to debug level 3.
   8 Evaluate 6 and ignore the rest.
   9 Return to level 2.
  10 Return to debug level 2.
  11 Return to level 1.
  12 Return to debug level 1.
  13 Return to level 0.
  14 Return to top loop level 0.

Type :b for backtrace or :c <option number> to proceed.
Type :bug-form "<subject>" for a bug report template or :? for other options.

CL-USER 6 : 4 > (fun 4)

Error: Undefined operator APP1 in form (APP1 (FUN (- N 1)) N).
   1 Try invoking APP1 again.
   2 Return some values from the form (APP1 (FUN (- N 1)) N).
   3 Try invoking something other than APP1 with the same arguments.
   4 Set the symbol-function of APP1 to another function.
   5 Set the macro-function of APP1 to another function.
   6 (abort) Return to level 4.
   7 Return to debug level 4.
   8 Return to level 3.
   9 Return to debug level 3.
  10 (continue) Evaluate 6 and ignore the rest.
  11 Return to level 2.
  12 Return to debug level 2.
  13 Return to level 1.
  14 Return to debug level 1.
  15 Return to level 0.
  16 Return to top loop level 0.

Type :b for backtrace or :c <option number> to proceed.
Type :bug-form "<subject>" for a bug report template or :? for other options.

CL-USER 7 : 5 > (app1 (7 8) 9)

Error: Undefined operator APP1 in form (APP1 (7 8) 9).
   1 (continue) Try invoking APP1 again.
   2 Return some values from the form (APP1 (7 8) 9).
   3 Try invoking something other than APP1 with the same arguments.
   4 Set the symbol-function of APP1 to another function.
   5 Set the macro-function of APP1 to another function.
   6 (abort) Return to level 5.
   7 Return to debug level 5.
   8 Return to level 4.
   9 Return to debug level 4.
  10 Return to level 3.
  11 Return to debug level 3.
  12 Evaluate 6 and ignore the rest.
  13 Return to level 2.
  14 Return to debug level 2.
  15 Return to level 1.
  16 Return to debug level 1.
  17 Return to level 0.
  18 Return to top loop level 0.

Type :b for backtrace or :c <option number> to proceed.
Type :bug-form "<subject>" for a bug report template or :? for other options.

CL-USER 8 : 6 > (app1 '(7 8) 9)

Error: Undefined operator APP1 in form (APP1 (QUOTE (7 8)) 9).
   1 Try invoking APP1 again.
   2 Return some values from the form (APP1 (QUOTE (7 8)) 9).
   3 Try invoking something other than APP1 with the same arguments.
   4 Set the symbol-function of APP1 to another function.
   5 Set the macro-function of APP1 to another function.
   6 (abort) Return to level 6.
   7 Return to debug level 6.
   8 Return to level 5.
   9 Return to debug level 5.
  10 Return to level 4.
  11 Return to debug level 4.
  12 Return to level 3.
  13 Return to debug level 3.
  14 (continue) Evaluate 6 and ignore the rest.
  15 Return to level 2.
  16 Return to debug level 2.
  17 Return to level 1.
  18 Return to debug level 1.
  19 Return to level 0.
  20 Return to top loop level 0.

Type :b for backtrace or :c <option number> to proceed.
Type :bug-form "<subject>" for a bug report template or :? for other options.

CL-USER 9 : 7 > (app1 '(7 8) 9)
(7 8 9)

CL-USER 10 : 7 > (fun 4)
(1 2 3 4)

CL-USER 11 : 7 > (fun 12)
(1 2 3 4 5 6 7 8 9 10 11 12)

CL-USER 12 : 7 > (fun 0)
NIL

CL-USER 13 : 7 > fun (2)

Error: Illegal argument in functor position: 2 in (2).
   1 (continue) Evaluate 2 and ignore the rest.
   2 (abort) Return to level 7.
   3 Return to debug level 7.
   4 Return to level 6.
   5 Return to debug level 6.
   6 Return to level 5.
   7 Return to debug level 5.
   8 Return to level 4.
   9 Return to debug level 4.
  10 Return to level 3.
  11 Return to debug level 3.
  12 Evaluate 6 and ignore the rest.
  13 Return to level 2.
  14 Return to debug level 2.
  15 Return to level 1.
  16 Return to debug level 1.
  17 Return to level 0.
  18 Return to top loop level 0.

Type :b for backtrace or :c <option number> to proceed.
Type :bug-form "<subject>" for a bug report template or :? for other options.

CL-USER 14 : 8 > (+ 1 2)
3

CL-USER 15 : 8 > (fun 2)
(1 2)

CL-USER 16 : 8 > 